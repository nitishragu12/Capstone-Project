name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/CICD-setup # For testing
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build with Docker Compose
        run: |
          docker-compose -f docker-compose.dev.yml build
        env:
          ELS_API_KEY: ${{ secrets.ELS_API_KEY }}
          ELS_TOKEN: ${{ secrets.ELS_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Run tests with Docker Compose
        run: |
          docker-compose -f docker-compose.dev.yml up -d
          docker-compose -f docker-compose.dev.yml exec -T frontend npm test
          docker-compose -f docker-compose.dev.yml exec -T backend pytest
          docker-compose -f docker-compose.dev.yml down
        env:
          ELS_API_KEY: ${{ secrets.ELS_API_KEY }}
          ELS_TOKEN: ${{ secrets.ELS_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
